using System.Reflection;
using UnityEngine;
using UnityEngine.Rendering.Universal;
using System;


#if UNITY_EDITOR
using UnityEditor;
#endif


namespace SanctumCorp
{
	public class DynamicShadowCaster2DMaker : MonoBehaviour
	{
		[SerializeField] private Sprite sprite;

		public void DoShasow()
		{
#if UNITY_EDITOR
			EditorApplication.delayCall += () =>
			{
				var caster = gameObject.GetComponent<ShadowCaster2D>();
				if (caster == null)
				{
					caster = gameObject.AddComponent<ShadowCaster2D>();
				}

				FieldInfo shapePathField = typeof(ShadowCaster2D).GetField("m_ShapePath", BindingFlags.NonPublic | BindingFlags.Instance);

				Vector3[] dinamicShape = MakePoints.GetPoints(sprite, transform);

				if (shapePathField != null)
				{
					shapePathField.SetValue(caster, dinamicShape);
				}
			};
#endif
		}

		public void RefreshShadowCaster()
		{
#if UNITY_EDITOR
			EditorApplication.delayCall += () =>
			{
				var caster = gameObject.GetComponent<ShadowCaster2D>();
				if (caster == null)
				{
					Debug.LogWarning("ShadowCaster2D component not found on this GameObject.");
					return;
				}

				FieldInfo shapePathField = typeof(ShadowCaster2D).GetField("m_ShapePath", BindingFlags.NonPublic | BindingFlags.Instance);
				FieldInfo meshField = typeof(ShadowCaster2D).GetField("m_Mesh", BindingFlags.NonPublic | BindingFlags.Instance);

				Assembly universalRPAssembly = typeof(ShadowCaster2D).Assembly;

				Type shadowUtilityType = universalRPAssembly.GetType("UnityEngine.Rendering.Universal.ShadowUtility");

				MethodInfo generateShadowMeshMethod = null;
				if (shadowUtilityType != null)
				{
					generateShadowMeshMethod = shadowUtilityType.GetMethod("GenerateShadowMesh", BindingFlags.Public | BindingFlags.Static);
				}


				if (shapePathField == null || meshField == null || generateShadowMeshMethod == null)
				{
					Debug.LogError($"Failed to get ShadowCaster2D's internal fields or ShadowUtility.GenerateShadowMesh method via reflection. " +
								   $"ShapePath: {shapePathField != null}, Mesh: {meshField != null}, ShadowUtilityType: {shadowUtilityType != null}, GenerateShadowMesh: {generateShadowMeshMethod != null}");
					return;
				}

				meshField.SetValue(caster, new Mesh());

				Vector3[] currentShapePath = (Vector3[])shapePathField.GetValue(caster);

				generateShadowMeshMethod.Invoke(null, new object[] { meshField.GetValue(caster), currentShapePath });

				Debug.Log("ShadowCaster2D refreshed (mesh regenerated by ShadowUtility).");
			};
#else
            Debug.LogWarning("RefreshShadowCaster can only be called in Unity Editor (due to #if UNITY_EDITOR).");
#endif
		}

	}
}
